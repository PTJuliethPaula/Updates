@charset "utf-8";
/*!
 Copyright (c) 2001-2018 by Wincor Nixdorf International GmbH,
 Heinz-Nixdorf-Ring 1, 33106 Paderborn, Germany

 This software is the confidential and proprietary information
 of Wincor Nixdorf.
 You shall not disclose such Confidential Information and shall
 use it only in accordance with the terms of the license agreement
 you entered into with Wincor Nixdorf.


*/

/*
 * CSS document for resolution-independent information
 */

/*---- Comments guidelines: ----*/
/*
 * Headline
 */
/*---- Sub headline: ----*/
/*-- Element specific --*/
/* Attribute specific */

/*---- General order of attributes: ----*/
/*
element, #id, .class {
    display: none / flex / block / inline;
    visibility: hidden;
    opacity: <number>; (between 0 and 1)
    flex-direction: column / row;
    order: <number>;
    flex-grow: 0 / 1;
    flex-shrink: 0 / 1;
    align-self: flex-start / center / flex-end;
    align-items: flex-start / center / flex-end;
    justify-content: flex-start / center / flex-end;
    flex-flow: wrap / column wrap / row wrap;
    z-index: <number>;
    overflow, overflow-x, overflow-y: auto / hidden;
    content: <string>;
    background-color: <string> / <hex>;
    color: <string> / <hex>;
    font-family: <string>;
    font-weight: bold;
    text-align: left / center / right;
    font-style: normal;
    word-wrap: break-word;
    white-space: pre-wrap;
    border: <string> <string> / <hex>;
    box-shadow: <numberx <numberx <numberx <color> <form>; (no influence on sizes and positions)
    outline: none;
    cursor: text / not-allowed;
    pointer-events: none;
    -webkit-text-size-adjust: <number>%;
    -webkit-user-select: none;
    -webkit-appearance: none;
    -webkit-text-stroke-color: <string> / <hex>;
    appearance: none;
}
*/

:root {

    /* basic colors*/
    --color01: rgba(0, 255, 255, 1);
    --color02: rgba(255, 255, 0, 1);
    --color03: rgba(255, 255, 255, 1);
    --color04: rgba(0, 0, 0, 1);
    --color05: rgba(41, 40, 44, 1);
    --color06: rgba(0, 255, 0, 1);
    --color07: rgba(255, 0, 0, 1);
    --color08: rgba(255, 100, 0, 1);
    --color09: rgba(255, 255, 255, 1);
    --color10: rgba(255, 255, 0, 1);
    --color11:#faa307;
    --color12:#a8dadc;
    --color13:#a685e2;
    --color14:#fff3e6;
    /* alpha variants */
    --color01-alpha-0: rgba(0, 255, 255, 0);
    --color01-alpha-2: rgba(0, 255, 255, 0.02);
    --color01-alpha-5: rgba(0, 255, 255, 0.05);
    --color01-alpha-7: rgba(0, 255, 255, 0.07);
    --color01-alpha-9: rgba(0, 255, 255, 0.09);
    --color01-alpha-10: rgba(0, 255, 255, 0.10);
    --color01-alpha-15: rgba(0, 255, 255, 0.15);
    --color01-alpha-25: rgba(0, 255, 255, 0.25);
    --color01-alpha-30: rgba(0, 255, 255, 0.3);
    --color01-alpha-40: rgba(0, 255, 255, 0.4);
    --color01-alpha-50: rgba(0, 255, 255, 0.5);
    --color01-alpha-60: rgba(0, 255, 255, 0.6);
    --color01-alpha-70: rgba(0, 255, 255, 0.7);
    --color01-alpha-80: rgba(0, 255, 255, 0.8);
    --color02-alpha-0: rgba(255, 255, 0, 0);
    --color02-alpha-15: rgba(255, 255, 0, 0.15);
    --color02-alpha-25: rgba(255, 255, 0, 0.25);
    --color02-alpha-30: rgba(255, 255, 0, 0.3);
    --color02-alpha-40: rgba(255, 255, 0, 0.4);
    --color02-alpha-50: rgba(255, 255, 0, 0.5);
    --color02-alpha-60: rgba(255, 255, 0, 0.6);
    --color02-alpha-70: rgba(255, 255, 0, 0.7);
    --color02-alpha-80: rgba(255, 255, 0, 0.8);
    --color03-alpha-0: rgba(255, 255, 255, 0);
    --color03-alpha-1: rgba(255, 255, 255, 0.01);
    --color03-alpha-2: rgba(255, 255, 255, 0.02);
    --color03-alpha-5: rgba(255, 255, 255, 0.05);
    --color03-alpha-10: rgba(255, 255, 255, 0.1);
    --color03-alpha-15: rgba(255, 255, 255, 0.15);
    --color03-alpha-20: rgba(255, 255, 255, 0.2);
    --color03-alpha-25: rgba(255, 255, 255, 0.25);
    --color03-alpha-30: rgba(255, 255, 255, 0.3);
    --color03-alpha-40: rgba(255, 255, 255, 0.4);
    --color03-alpha-50: rgba(255, 255, 255, 0.5);
    --color03-alpha-60: rgba(255, 255, 255, 0.6);
    --color03-alpha-70: rgba(255, 255, 255, 0.7);
    --color03-alpha-80: rgba(255, 255, 255, 0.8);
    --color04-alpha-0: rgba(0, 0, 0, 0);
    --color04-alpha-20: rgba(0, 0, 0, 0.2);
    --color04-alpha-30: rgba(0, 0, 0, 0.3);
    --color04-alpha-40: rgba(0, 0, 0, 0.4);
    --color04-alpha-50: rgba(0, 0, 0, 0.5);
    --color04-alpha-60: rgba(0, 0, 0, 0.6);
    --color04-alpha-70: rgba(0, 0, 0, 0.7);
    --color04-alpha-80: rgba(0, 0, 0, 0.8);
    --color06-alpha-0: rgba(0, 255, 0, 0);
    --color06-alpha-25: rgba(0, 255, 0, 0.25);
    --color06-alpha-30: rgba(0, 255, 0, 0.3);
    --color06-alpha-40: rgba(0, 255, 0, 0.4);
    --color06-alpha-60: rgba(0, 255, 0, 0.6);
    --color06-alpha-70: rgba(0, 255, 0, 0.7);
    --color06-alpha-80: rgba(0, 255, 0, 0.8);
    --color07-alpha-0: rgba(255, 0, 0, 0);
    --color07-alpha-15: rgba(255, 0, 0, 0.15);
    --color07-alpha-25: rgba(255, 0, 0, 0.25);
    --color07-alpha-30: rgba(255, 0, 0, 0.3);
    --color07-alpha-50: rgba(255, 0, 0, 0.5);
    --color07-alpha-60: rgba(255, 0, 0, 0.6);
    --color07-alpha-80: rgba(255, 0, 0, 0.8);
    --color09-alpha-0: var(--color03-alpha-0);
    --color09-alpha-1: var(--color03-alpha-1);
    --color09-alpha-2: var(--color03-alpha-2);
    --color09-alpha-5: var(--color03-alpha-5);
    --color09-alpha-10: var(--color03-alpha-10);
    --color09-alpha-15: var(--color03-alpha-15);
    --color09-alpha-20: var(--color03-alpha-20);
    --color09-alpha-25: var(--color03-alpha-25);
    --color09-alpha-30: var(--color03-alpha-30);
    --color09-alpha-40: var(--color03-alpha-40);
    --color09-alpha-50: var(--color03-alpha-50);
    --color09-alpha-60: var(--color03-alpha-60);
    --color10-alpha-0: var(--color02-alpha-0);
    --color10-alpha-15: var(--color02-alpha-15);
    --color10-alpha-25: var(--color02-alpha-25);
    --color10-alpha-30: var(--color02-alpha-30);
    --color10-alpha-40: var(--color02-alpha-40);
    --color10-alpha-50: var(--color02-alpha-50);
    --color10-alpha-60: var(--color02-alpha-60);
    --color10-alpha-70: var(--color02-alpha-70);
    --color10-alpha-80: var(--color02-alpha-80);

    /* special colors*/
    --color01-sliding-checkbox-label: rgb(0, 139, 139);
    --color03-generalinputback-popup: rgb(66, 65, 70);
    --color04-generalinputback: rgb(40, 40, 40);
    --color04-generalinputback-txnbkg: rgb(40, 45, 48);
    --colorSignatureBackground: var(--color05);

    /* buttons */
    --command-automation-duration: 0.15s;

    /* general */
    background: var(--color05);
}

/*---- Normalization of elements ----*/
html {
    overflow: hidden;
}

body {
    overflow: hidden;  /* Avoid scroll bars */
    user-select: none; /* Touch specific */
     -webkit-user-select: none; /* Touch specific */
    -moz-user-select: none; /* Touch specific */
}

img, object {
    pointer-events: none;
}

table {
    border-collapse: collapse;
}

canvas {
    color: var(--color01);
}

/*
 * General layouts, colors and fonts
 */

/*-- Colors --*/
.color01 {
    color: var(--color01);
}

.color02 {
    color: var(--color02);
}

.color03 {
    color: var(--color03);
}

.color04, button:disabled>var, .disabled>var {
    color: var(--color04);
}

.color05 {
    color: var(--color05);
}

.color06 {
    color: var(--color06);
}

.color07 {
    color: var(--color07);
}

.color08 {
    color: var(--color08);
}

.color09 {
    color: var(--color09);
}

.color10 {
    color: var(--color10);
}

/*-- Fonts --*/
@font-face {
    font-family: "Ubuntu Light";
    src: url(../../fonts/Ubuntu/Ubuntu-Light.ttf) format('truetype');
    font-weight: normal;
}

@font-face {
    font-family: "Ubuntu";
    src: url(../../fonts/Ubuntu/Ubuntu-Regular.ttf) format('truetype');
    font-style: normal;
}

@font-face {
    font-family: "Ubuntu";
    src: url(../../fonts/Ubuntu/Ubuntu-Bold.ttf) format('truetype');
    font-weight: bold;
}

@font-face {
    font-family: "Quivira";
    src: url(../../fonts/Quivira/Quivira.otf) format('opentype');
    font-weight: normal;
}

@font-face{
    font-family: "Rubik";
    src:url(../../fonts/Quivira/Rubik-Regular.ttf)format('truetype');
    font-weight: normal;
}

html * {
    font-family: Ubuntu, "Ubuntu Light", Quivira, Arial, Verdana, sans-serif, Rubik;
}

.font09{
    font-family: "Rubik";
    font-size: 30px;
}

/*-- Text --*/
label, p, var, span, .subMenuItem>var::before, .subMenuItem>var::after  {
    color: var(--color01);
    text-shadow: 1px 1px 3px var(--color04);
    font-style: normal;
    text-align: start;
    word-wrap: break-word;
    cursor: inherit;
}

/*-- Design Time Runner --*/
#activator_icon {
    pointer-events: none;
}

.dtr_menu_activator {
    display: none;
    pointer-events: all;
    opacity: 0.8;
    z-index: 99991;
}

.dtr_menu_activator:active {
    pointer-events: all;
}

.dtr_menu {
    display: none;
    background: var(--color04-alpha-20);
    overflow-y: auto;
    z-index: 99990;
    box-shadow: 3px 3px 3px var(--color04);
    border-top: 1px groove var(--color04);
    border-right: 1px groove var(--color04);
    border-bottom: 1px groove var(--color04);
}

#dtr_menu .generalInput {
    text-align: left;
}

#dtr_menu_items .dtr_menu_item,
#dtr_more_items .dtr_menu_item {
    display: inline-flex;
    pointer-events: auto;
    text-transform: lowercase;
}

#dtr_menu_items .dtr_menu_item_ext>var {
    text-transform: none;
}

.dtr_menu_item:hover, .dtr_menu_item:focus {
    background-color: var(--color10);
    color: var(--color04);
}

.dtr_menu_item.tooltip {
    display: inline;
    position: relative;
}

.dtr_menu_item.tooltip:hover::after {
    background: var(--color09-alpha-1);
    background: var(--color04-alpha-80);
    color: var(--color09);
    content: attr(data-item-name);
}

/*---- Grid layout of screen ----*/
#flexHeader, #flexMain, #flexMainPopup, #flexFooter, #flexNav, #flexNavPopup, #flexArticle, #flexArticlePopup, #flexAside, #flexAsidePopup {
    display: flex;
}

/* Select child after applicationHost */
body>:first-child>:first-child {
    display: flex;
    flex-direction: column;
    /* because sometimes the footer is rendered in the middle of the view before the article comes in and push the footer down*/
    justify-content: space-between;
}

/*-- Header --*/
#flexHeader {
    order: 1;
    flex-direction: column;
    justify-content: space-between;
    flex-shrink: 0;
    overflow: visible;
}

#flexHeaderTop, #flexHeaderBottom, #flexAdditionalHeaderInfo, #flexTime, #flexHelp {
    display: flex;
}

/*-- Header-top --*/
#flexHeaderTop {
    order: 1;
    flex-direction: row;
    justify-content: space-between;
    font-family: "Ubuntu Light", Quivira, Arial, Verdana, sans-serif;
}

#flexLogo {
    order: 1;
}

#flexLogo>:first-child {
    /*  For Chrome 'content: url(...)' will also work, but not for Firefox.
        Therefore we have to use 'background:  ', which is commonly recommended for all browsers*/
    /*background: url('../../../default/images/dn_logo_v_white.svg') no-repeat; */
}

/*-- Additional header info --*/
#flexAdditionalHeaderInfo {
    order: 2;
    align-items: center;
}

/*-- Help --*/
#flexHelp {
    order: 3;
    /*use flex-end to display the globe, question mark, etc. at the bottom of the line*/
    align-items: flex-end;
}

#flexHelp>div {
    background: none;
    border: none;
    box-shadow: none;
}

/*-- Date/Time --*/
#flexTime {
    order: 3;
    flex-direction: column;
    justify-content: flex-end; /*this way, 'time' and 'date' are displayed at the bottom of the column and we do not have to set a pixel padding onto the top direction*/
}

#flexTime>#time>var:nth-child(1) {
    font-weight: bold;
}

#flexHeader[data-message-visible="true"] time {
    -webkit-filter: blur(4px);
    filter: blur(4px);
}

/*-- Header-bottom --*/
#flexHeaderBottom {
    order: 2;
    flex-direction: column;
    /*For smooth toggle when header message disappears*/
    opacity: 1;
    transition: opacity 0.5s;
}

#flexHeader[data-message-visible="true"]:not([data-view-id="message"]):not([data-view-id="question"]):not([data-view-id="questionDCC"]):not([data-view-id="ASAIquestionBack"]):not([data-view-id="adainformation"]):not([data-view-id="receipt"]) #flexHeaderBottom {
    opacity: 0;
    /*For smooth toggle when header message appears*/
    transition: opacity 0.5s;
}

#flexHeader[data-message-visible="true"] #flexAdditionalHeaderInfo {
    opacity: 0.15;
    /*For smooth toggle when header message appears*/
    transition: opacity 0.5s;
}

div[data-popup-active="true"] #headline, div[data-popup-active="true"] #instruction,
div[data-popup-active="true"] #flexTime, div[data-popup-active="true"] #flexAdditionalHeaderInfo,
div[data-popup-active="true"] #flexNav, div[data-popup-active="true"] #flexArticle, div[data-popup-active="true"] #flexAside {
    opacity: 0.15;
}

/*-- Main --*/
#flexMain, #flexMainPopup {
    order: 2;
    flex-direction: row;
    overflow: visible;
    flex-grow: 1;
    z-index: 2;
}

#flexMain.hideFlexMainOnActiveVK {
    opacity: 0;
    transition: opacity 0.2s ease-out;
}

/*-- Nav --*/
#flexNav, #flexNavPopup {
    order: 1;
    flex-direction: column;
    align-items: flex-start;
    flex-grow: 1;
    flex-shrink: 0;
    overflow: visible;
    z-index: 1;
}

/*-- Soft key's LEFT --*/
#flexNavSK00, #flexNavSK01, #flexNavSK02, #flexNavSK03,
#flexNavPopupSK00, #flexNavPopupSK01, #flexNavPopupSK02, #flexNavPopupSK03 {
    display: block;
}

#flexNavSK00 {
    order: 1;
}

#flexNavSK01 {
    order: 2;
}

#flexNavSK02 {
    order: 3;
}

#flexNavSK03 {
    order: 4;
}

/*-- Article --*/
#flexArticle, #flexArticlePopup {
    flex-direction: row;
    order: 2;
    flex-grow: 1;
    flex-shrink: 1;
    justify-content: center;
    overflow: visible;
    z-index: -1;
}

/*-- Aside --*/
#flexAside, #flexAsidePopup {
    order: 3;
    flex-direction: column;
    align-items: flex-end;
    flex-grow: 1;
    flex-shrink: 0;
    overflow: visible;
    z-index: 1;
}

/*-- Soft key's RIGHT --*/
#flexAsideSK00, #flexAsideSK01, #flexAsideSK02, #flexAsideSK03,
#flexAsidePopupSK00, #flexAsidePopupSK01, #flexAsidePopupSK02, #flexAsidePopupSK03 {
    display: block;
}

#flexAsideSK00 {
    order: 1;
}

#flexAsideSK01 {
    order: 2;
}

#flexAsideSK02 {
    order: 3;
}

#flexAsideSK03 {
    order: 4;
}

/*-- Footer --*/
#flexFooter {
    order: 3;
    flex-direction: row;
    z-index: 1;
}

#flexHome, #flexExtra, #flexConfirm, #flexCorrect, #flexCancel {
    display: flex;
    flex-grow: 0;
    flex-shrink: 0;
    visibility: hidden;
}

#flexHome {
    order: 1;
}

#flexExtra {
    order: 2;
}

#flexConfirm {
    order: 3;
}

#flexCorrect {
    order: 4;
}

#flexCancel {
    order: 5;
}

/*
 * Element specific
 */

/*-- General alignment of figures --*/
figure {
    transform: translatez(0);
}

article figure {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    flex-shrink: 0;
    align-items: center;
    align-self: flex-start;
    justify-content: flex-end;
    overflow: visible;
}

/*-- Buttons --*/
/*
   To profit from flex box model div element is styled as a button with class .button
   Please keep in mind that not everything is working in the same way for div and button and
   vice versa, in particular the flex box model for button.
*/
button *, object {
    pointer-events: none;
    font-family: "Rubik Regular", Rubik;
}

button {
    /*needs an explicit setting to ensure cursor is hidden when 'hideCursor' param is true*/
    cursor: inherit;
}

.button, .checkBoxItem, .radioButtonItem {
    display: inline-flex;
    flex-direction: row;
    align-items: center;
    transform: translatez(0);
}

.button.skLeft {
    justify-content: space-between;
    align-self: flex-end;
}

.button.skRight {
    justify-content: flex-start;
    align-self: flex-start;
}

.button.button01.skLeft.iconButton {
    justify-content: flex-end;
}

.button, #buttonCancel, #buttonConfirm, #buttonCorrect, #buttonCancelPopup, #buttonConfirmPopup, #buttonCorrectPopup {
    box-shadow: 2px 2px 8px 0 var(--color04-alpha-80);
    outline: none;
}

.button, #buttonConfirm02{
    box-shadow: 2px 2px 8px 0 var(--color04-alpha-80);
    outline: none;
}

.button {
    background: linear-gradient(180deg, var(--color11) 0%, var(--color11) 100%);
    border-top: 1px solid var(--color11);
    border-bottom: 1px solid var(--color11);

}


.keyboardButton {
    border: 1px solid var(--color01);
}

#buttonCancel, #buttonCancelPopup {
    background: linear-gradient(180deg, var(--color07-alpha-60) 0%, var(--color07-alpha-30) 100%);
    border-top: 1px solid var(--color07);
    border-bottom: 1px solid var(--color07);
}

#buttonConfirm, #buttonConfirmPopup {
    background: linear-gradient(180deg, var(--color11) 0%, var(--color11) 100%);
    border-top: 1px solid var(--color11);
    border-bottom: 1px solid var(--color11);
}

#buttonConfirm02{
    background: linear-gradient(180deg, var(--color12) 0%, var(--color12) 100%);
    border-top: 1px solid var(--color12);
    border-bottom: 1px solid var(--color12);
}

#buttonCorrect, #buttonCorrectPopup {
    background: linear-gradient(180deg, var(--color10-alpha-60) 0%, var(--color10-alpha-30) 100%);
    border-top: 1px solid var(--color10);
    border-bottom: 1px solid var(--color10);
}

/*prominent item*/
.button.skLeft.prominentItem {
    background: linear-gradient(0deg, var(--color02-alpha-70) 0%, var(--color02-alpha-80) 10%, var(--color01-alpha-30) 11%, var(--color01-alpha-60) 100%);
    border-bottom: 1px solid var(--color02-alpha-80);
}

.button.skRight.prominentItem {
    background: linear-gradient(0deg, var(--color02-alpha-70) 0%, var(--color02-alpha-80) 10%, var(--color01-alpha-30) 11%, var(--color01-alpha-60) 100%);
    border-bottom: 1px solid var(--color02-alpha-80);
}

.button.skLeft, .button:active.skLeft, .pressed.skLeft  {
    border-left: 0;
    border-right: 1px solid var(--color01);
}

.button.skRight, .button:active.skRight, .pressed.skRight {
    border-right: 0;
    border-left: 1px solid var(--color01);
}

#buttonCancel.skRight, #buttonCancel.skRight:active, #buttonCancel.skRight.pressed,
#buttonCancelPopup.skRight, #buttonCancelPopup.skRight:active, #buttonCancelPopup.skRight.pressed {
    border-right: 0;
    border-left: 1px solid var(--color07);
}

#buttonCancel.skLeft, #buttonCancel.skLeft:active, #buttonCancel.skLeft.pressed,
#buttonCancelPopup.skLeft, #buttonCancelPopup.skLeft:active, #buttonCancelPopup.skLeft.pressed {
    border-left: 0;
    border-right: 1px solid var(--color07);
}

#buttonConfirm.skRight, #buttonConfirm.skRight:active, #buttonConfirm.skRight.pressed,
#buttonConfirmPopup.skRight, #buttonConfirmPopup.skRight:active, #buttonConfirmPopup.skRight.pressed {
    border-right: 0;
    border-left: 1px solid var(--color11);
}

#buttonConfirm02.skRight, #buttonConfirm02.skRight:active{
    border-right: 0;
    border-left: 1px solid var(--color12);
}

#buttonConfirm.skLeft, #buttonConfirm.skLeft:active, #buttonConfirm.skLeft.pressed,
#buttonConfirmPopup.skLeft, #buttonConfirmPopup.skLeft:active, #buttonConfirmPopup.skLeft.pressed {
    border-left: 0;
    border-right: 1px solid var(--color11);
}

#buttonCorrect.skRight, #buttonCorrect.skRight:active, #buttonCorrect.skRight.pressed,
#buttonCorrectPopup.skRight, #buttonCorrectPopup.skRight:active, #buttonCorrectPopup.skRight.pressed {
    border-right: 0;
    border-left: 1px solid var(--color10);
}

#buttonCorrect.skLeft, #buttonCorrect.skLeft:active, #buttonCorrect.skLeft.pressed,
#buttonCorrectPopup.skLeft, #buttonCorrectPopup.skLeft:active, #buttonCorrectPopup.skLeft.pressed {
    border-left: 0;
    border-right: 1px solid var(--color10);
}

.button:active.skLeft, .pressed.skLeft {
    background: linear-gradient(90deg, var(--color01) 0%, var(--color01-alpha-30) 100%);
    box-shadow: 0 0 6px 0 var(--color04);
    border-right: 1px solid var(--color01-alpha-80);
}

.button:active.skRight, .pressed.skRight {
    background: linear-gradient(-90deg, var(--color01) 0%, var(--color01-alpha-30) 100%);
    box-shadow: 0 0 6px 0 var(--color04);
    border-left: 1px solid var(--color01-alpha-80);
}

#buttonCancel.skRight:active, #buttonCancel.skRight.pressed,
#buttonCancelPopup.skRight:active, #buttonCancelPopup.skRight.pressed {
    background: linear-gradient(-90deg, var(--color07) 0%, var(--color07-alpha-30) 100%);
    box-shadow: 0 0 6px 0 var(--color04);
    border-left: 1px solid var(--color07-alpha-80);
}

#buttonCancel.skLeft:active, #buttonCancel.skLeft.pressed,
#buttonCancelPopup:active.skLeft, #buttonCancelPopup.skLeft.pressed {
    background: linear-gradient(90deg, var(--color07) 0%, var(--color07-alpha-30) 100%);
    box-shadow: 0 0 6px 0 var(--color04);
    border-right: 1px solid var(--color07-alpha-80);
}

#buttonConfirm.skRight:active, .pressed.skRight#buttonConfirm,
#buttonConfirmPopup.skRight:active, .pressed.skRight#buttonConfirmPopup {
    background: linear-gradient(-90deg, var(--color06) 0%, var(--color06-alpha-30) 100%);
    box-shadow: 0 0 6px 0 var(--color04);
    border-left: 1px solid var(--color06-alpha-80);
}

#buttonConfirm02.skRight:active, .pressed.skRight#buttonConfirm{
    background: linear-gradient(-90deg, var(--color06) 0%, var(--color06-alpha-30) 100%);
    box-shadow: 0 0 6px 0 var(--color04);
    border-left: 1px solid var(--color06-alpha-80);
}

#buttonConfirm.skLeft:active, #buttonConfirm.skLeft.pressed,
#buttonConfirmPopup.skLeft:active, #buttonConfirmPopup.skLeft.pressed {
    background: linear-gradient(90deg, var(--color06) 0%, var(--color06-alpha-30) 100%);
    box-shadow: 0 0 6px 0 var(--color04);
    border-right: 1px solid var(--color06-alpha-80);
}

#buttonCorrect.skRight:active, #buttonCorrect.skRight.pressed,
#buttonCorrectPopup.skRight:active, #buttonCorrectPopup.skRight.pressed {
    background: linear-gradient(-90deg, var(--color10) 0%, var(--color10-alpha-30) 100%);
    box-shadow: 0 0 6px 0 var(--color04);
    border-left: 1px solid var(--color10-alpha-80);
}

#buttonCorrect.skLeft:active, #buttonCorrect.skLeft.pressed,
#buttonCorrectPopup.skLeft:active, #buttonCorrectPopup.skLeft.pressed {
    background: linear-gradient(90deg, var(--color10) 0%, var(--color10-alpha-30) 100%);
    box-shadow: 0 0 6px 0 var(--color04);
    border-right: 1px solid var(--color10-alpha-80);
}

.button:active.skLeft>img, .pressed.skLeft>img,
.button:active.skRight>img, .pressed.skRight>img,
.button:active.skLeft>object, .pressed.skLeft>object,
.button:active.skRight>object, .pressed.skRight>object {
    opacity: 0.4;
}

.button[disabled], .disabled,
#buttonConfirm[disabled], #buttonConfirmPopup[disabled],
#buttonConfirm02[disabled],
#buttonCancel[disabled], #buttonCancelPopup[disabled],
#buttonCorrect[disabled], #buttonCorrectPopup[disabled] {
    box-shadow: none;
    border: none;
    pointer-events: none;
    cursor: not-allowed;
}

.button[disabled], .disabled, .button[disabled].skLeft.prominentItem, .button[disabled].skRight.prominentItem {
    background: var(--color01-alpha-25);
    border-top: 1px solid var(--color01-alpha-0);
    border-bottom: 1px solid var(--color01-alpha-0);
    transition: background 0.25s;
}

#buttonCancel[disabled], #buttonCancelPopup[disabled] {
    background: var(--color07-alpha-25);
    border-top: 1px solid var(--color07-alpha-0);
    border-bottom: 1px solid var(--color07-alpha-0);
    transition: background 0.25s;
}

#buttonConfirm[disabled], #buttonConfirmPopup[disabled] {
    background: var(--color11);
    border-top: 1px solid var(--color11);
    border-bottom: 1px solid var(--color11);
    transition: background 0.25s;
}

#buttonConfirm02[disabled]{
    transform: translateX(500px);
    transition: transform 0.30s;
}

#buttonCorrect[disabled], #buttonCorrectPopup[disabled] {
    background: var(--color10-alpha-25);
    border-top: 1px solid var(--color10-alpha-0);
    border-bottom: 1px solid var(--color10-alpha-0);
    transition: background 0.25s;
}

.button[disabled].skLeft, .disabled.skLeft {
    border-left: 0;
    border-right: 1px solid var(--color01-alpha-0);
}

#buttonCancel[disabled].skLeft, #buttonCancelPopup[disabled].skLeft {
    border-right: 1px solid var(--color07-alpha-0);
}

#buttonConfirm[disabled].skLeft, #buttonConfirmPopup[disabled].skLeft {
    border-right: 1px solid var(--color11);
}

#buttonCorrect[disabled].skLeft, #buttonCorrectPopup[disabled].skLeft {
    border-right: 1px solid var(--color11);
}

.button[disabled].skRight, .disabled.skRight {
    border-right: 0;
    border-left: 1px solid var(--color01-alpha-0);
}

#buttonCancel[disabled].skRight, #buttonCancelPopup[disabled].skRight {
    border-left: 1px solid var(--color07-alpha-0);
}

#buttonConfirm[disabled].skRight, #buttonConfirmPopup[disabled].skRight {
    border-left: 1px solid var(--color06-alpha-0);
}

#buttonCorrect[disabled].skRight, #buttonCorrectPopup[disabled].skRight {
    border-left: 1px solid var(--color10-alpha-0);
}

.button[disabled] var, .disabled var, .button[disabled] span, .disabled span {
    color: var(--color04-alpha-50);
    text-shadow: none;
    cursor: not-allowed;
    transition: color 0.25s;
}

.checkBoxItem[disabled], .radioButtonItem[disabled] {
    opacity: 0.25;
}

.checkBoxItem[disabled] .slidingCheckBox, .radioButtonItem[disabled] .radioButton {
    opacity: 0.7;
}

.button[disabled]>img, .disabled>img,
.button[disabled]>object, .disabled>object,
.checkBoxItem[disabled]>object,
.radioButtonItem[disabled]>object {
    opacity: 0.2;
    transition: opacity 0.25s;
}

.button var, .button span {
    text-shadow: 1px 1px 3px var(--color04);
    display: inherit;
    align-items: center;
    text-transform: uppercase;
}

.button:active.skLeft var, .pressed.skLeft var, .button:active.skLeft span, .pressed.skLeft span {
    text-shadow: 3px 3px 3px var(--color04);
}

.button:active.skRight var, .pressed.skRight var, .button:active.skRight span, .pressed.skRight span {
    text-shadow: -3px -3px 3px var(--color04);
}

.skLeft.subMenuItem[disabled]>var::before {
    color: var(--color03-alpha-25);
}

.skRight.subMenuItem[disabled]>var::after {
    color: var(--color03-alpha-25);
}

.skLeft.subMenuItem>var::before {
    position: absolute;
    content: '\22ee';
    color: var(--color03);
}

.skRight.subMenuItem>var::after {
    position: absolute;
    content: '\22ee';
    color: var(--color03);
}

/*
 * Component specific
 */

.disabledElement {
    opacity: 0.15;
}

.borderLineDrawingColor {
    color: var(--color01);
}

/*-- Selection slide indicator --*/
#slideIndicatorGroup {
    display: flex;
    justify-content: center;
    z-index: -1;
    animation: fadeIn 0.5s;
}

.slideIndicator, .slideIndicatorActive {
    border: 1px solid var(--color09-alpha-25);
    background: linear-gradient(180deg, var(--color09-alpha-40) 0%, var(--color09-alpha-20) 100%);
    box-shadow: 2px 2px 8px var(--color04-alpha-80);
}

.slideIndicatorActive {
    background: linear-gradient(180deg, var(--color01-alpha-60) 0%, var(--color01-alpha-30) 100%);
    border: 1px solid var(--color01);
}

/*-- Selection bread crumbs --*/
.breadCrumb {
    position: relative;
    color: var(--color02);
    background: var(--color01-alpha-50);
}

.breadCrumb:last-child {
    color: var(--color03);
}

.breadCrumb:first-child {
    color: var(--color02);
}

.breadCrumb:active:not(:last-child) {
    color: var(--color03);
}

.breadCrumb::after { /*adding the arrows for the breadcrumbs using rotated pseudo elements*/
    position: absolute;
    content: '';
    /*we need to prevent the arrows from getting buried under the next link*/
    z-index: 1;
    /*stylish arrow design using box shadow*/
    box-shadow: 2px -2px 0 1px var(--color04-alpha-60), 3px -3px 0 2px var(--color09-alpha-15);
}

.breadCrumb:last-child::after { /*we don't need an arrow after the last link*/
    content: none;
}

.breadCrumb::before { /*we will use the :before element to show numbers*/
    position: absolute;
    content: attr(data-number);
    text-align: center;
    alignment: center;
    color: var(--color03);
}

/*-- Inputs and textareas --*/
input, textarea {
    cursor: inherit;
    outline: none;
}

/* Set explicit for textarea, because there seems to be no inheritance from html */
textarea {
    overflow: hidden;
    -webkit-appearance: none;
    -moz-appearance: none;
}

input[type=number] {
  -moz-appearance: textfield;
}

input[type="text"]:enabled, input[type="number"]:enabled, input[type="email"]:enabled, input[type="search"]:enabled,
input[type="tel"]:enabled, input[type="url"]:enabled, textarea:enabled {
    background: var(--color09);
    border: none;
}

input[type="text"]:focus, input[type="number"]:focus, input[type="email"]:focus, input[type="search"]:focus,
input[type="tel"]:focus, input[type="url"]:focus, textarea:focus {
    background: var(--color09);
    border: none;
}

input:disabled(:not([data-view-id="formentry"])), textarea:disabled, input[data-visual-state="2"] {
    opacity: 0.4;
    background-color: var(--color09-alpha-30);
    border: 1px solid var(--color09-alpha-30);
}

div[data-view-id="formentry"] input:disabled {
    background-color: var(--color09-alpha-40);
    border: 2px solid var(--color09-alpha-0);
}

.generalInputLabel {
    text-shadow: none;
    color: var(--color05);
    z-index: 2;
}

/* enabled but not the active input field */
input[data-visual-state="0"] {
    opacity: 1;
}

/* pressed = active input field */
input[data-visual-state="1"] {
    opacity: 1;
    border: 2px solid var(--color01);
}

/* Use a different style for inputs which are disabled, but should much as visible as other elements are */
input:disabled:required, textarea:disabled:valid {
    opacity: 1;
}

/* Disable Webkit spin-buttons for inputs with type="number" */
input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    appearance: none;
}

/* validation state: empty: no value or disabled */
input[data-validation-state="empty"]:not([id="generalVKInput"]) {
    border: 2px solid var(--color09);
}

/* validation state: valid */
input[data-validation-state="valid"]:not([id="generalVKInput"]) {
    border: 2px solid var(--color06);
}

/* validation state: wrong */
input[data-validation-state="invalid"]:not([id="generalVKInput"]) {
    border: 2px solid var(--color07);
}

/* validation state: empty: no value or disabled */
var[data-validation-state="empty"] {
    /* no additional style */
}

/* validation state: valid */
var[data-validation-state="valid"] {
    color: var(--color06);
}

/* validation state: wrong */
var[data-validation-state="invalid"] {
    color: var(--color07);
}

/* Style for the HTML5 placeholder attribute within input or form fields */
input::placeholder {
    color: var(--color04);
    opacity: 0.3;
}

/*-- Scrollbar --*/
::-webkit-scrollbar-track {
    border: solid var(--color01);
}

::-webkit-scrollbar-thumb {
    background: var(--color01-alpha-40);
}

.generalInput, #generalInputFieldArea, #numberInput, #charInput, #emailInput {
    z-index: 1;
}

.generalInput {
    text-align: right;
}

.generalInputCaption {
    z-index: 2;
    text-align: right;
}

/*-- Checkboxes --*/
.slidingCheckBox {
    display: inline-flex;
    position: relative;
    border: 1px solid var(--color01);
    box-shadow: 2px 2px 8px 0 var(--color04-alpha-80);
}

.slidingCheckBox::after, .slidingCheckBox::before {
    position: absolute;
    z-index: 0;
    text-shadow: 2px 2px 0 var(--color04-alpha-80);
}

.slidingCheckBox::after {
    color: var(--color07-alpha-80);
    content: 'O';
}

.slidingCheckBox::before {
    color: var(--color06);
    content: 'I';
}

.slidingCheckBox label {
    display: block;
    position: absolute;
    z-index: 1;
    background: linear-gradient(180deg, var(--color01) 20%, var(--color01-sliding-checkbox-label) 100%);
    box-shadow: 0 2px 2px 0 var(--color04-alpha-70);
    transition: left 0.3s ease-out;
}

.slidingCheckBox input[type=checkbox] {
    /*necessary to activate slider even when user click left or right beside the label*/
    display: block;
    opacity: 0;
    z-index: 1;
}

.slidingCheckBox[disabled], .slidingCheckBox .disabled {
    opacity: 0.25;
}

/*-- Radiobuttons --*/
.radioButton {
    display: inline-flex;
    position: relative;
    border: 1px solid var(--color01);
    box-shadow: 2px 2px 8px 0 var(--color04-alpha-80);
}

.radioButton label {
    display: block;
    position: absolute;
    z-index: 1;
    background: linear-gradient(180deg, var(--color01) 20%, var(--color01-sliding-checkbox-label) 100%);
    box-shadow: 2px 2px 2px 0 var(--color04-alpha-70);
}

@keyframes radioActive {
    0% {
        transform: scale(0.5);
        box-shadow: 0 0 11px 0 var(--color01-alpha-10), 0 0 11px 0 var(--color01-alpha-30);
    }
    100% {
        transform: scale(1);
        box-shadow: 0 0 11px 11px var(--color01-alpha-10),  0 0 11px 11px var(--color01-alpha-30);
    }
}

.radioButton input[type=radio]:checked + label {
    animation: radioActive 0.2s ease-out;
}

.radioButton input[type=radio] {
    display: block;
    opacity: 0;
    z-index: 1;
}

.radioButtonItem {
    text-transform: uppercase;
    align-self: center;
}

.radioButtonItemLeft {
    justify-content: flex-start;
    border: 1px solid var(--color01);
    border-left: none;
}

.radioButtonItemRight {
    justify-content: flex-end;
    border: 1px solid var(--color01);
    border-right: none;
}

.radioButtonItemRight>var {
    text-align: end;
}

/*-- Wait spinner --*/
#waitSpinner .point {
    background-color: var(--color09-alpha-1);
}

.spinner {
    z-index: 9999;
}

#waitSpinner .circle {
    border: solid transparent;
    /* Can't be optimized since top must be separated from other border sides */
    border-top: solid var(--color09-alpha-1);
}

.spinner2 {
    border: 15px solid var(--color02-alpha-15);
    border-top: 15px solid var(--color02-alpha-80);
}

/* bounce following spinner */
#waitSpinner .followingSpinnerShape {
    background-color: var(--color02-alpha-60);
    border: 1px solid var(--color02);
    animation-name: bounce_followingSpinner;
    animation-duration: 2.1s;
    animation-iteration-count: infinite;
    /*animation-timing-function: ease-in-out;*/
}

#followingSpinner_1 {
    animation-delay: 0s;
}

#followingSpinner_2 {
    animation-delay: 0.21s;
}

#followingSpinner_3 {
    animation-delay: 0.42s;
}

#followingSpinner_4 {
    animation-delay: 0.63s;
}

/* rotate plane spinner */
.rotatePlaneSpinner {
    background-color: var(--color02-alpha-60);
    border: 1px solid var(--color02);
    animation: rotateplane 1.2s infinite ease-in-out;
}

@keyframes rotateplane {
    0% {
        transform: perspective(120px);
    }
    50% {
        transform: perspective(120px) rotateY(180deg);
        background-color: var(--color01-alpha-60);
        border: 1px solid var(--color01);
    }
    100% {
        transform: perspective(120px) rotateY(180deg) rotateX(180deg);
    }
}

/* stretch play spinner */
.stretchPlaySpinner>div {
    background-color: var(--color10-alpha-60);
    border: 1px solid var(--color10);
    display: inline-block;
    animation: stretchdelay 1.2s infinite ease-in-out;
}

.stretchPlaySpinner .rect2 {
    animation-delay: -1.1s;
}

.stretchPlaySpinner .rect3 {
    animation-delay: -1.0s;
}

.stretchPlaySpinner .rect4 {
    animation-delay: -0.9s;
}

.stretchPlaySpinner .rect5 {
    animation-delay: -0.8s;
}

@keyframes stretchdelay {
    0%, 40%, 100% {
        transform: scaleY(0.4);
    }
    50% {
        background-color: var(--color01-alpha-60);
        border: 1px solid var(--color01);
    }
    20% {
        transform: scaleY(1.0);
    }
}

/* cube grid spinner */
.sk-cube-grid {
    width: 80px;
    height: 80px;
}

.sk-cube-grid .sk-cube {
    width: 30%;
    height: 30%;
    float: left;
    background-color: var(--color01-alpha-60);
    border: 1px solid var(--color01);
    animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;
}

.sk-cube-grid .sk-cube1 {
    animation-delay: 0.2s;
}

.sk-cube-grid .sk-cube2 {
    animation-delay: 0.3s;
}

.sk-cube-grid .sk-cube3 {
    animation-delay: 0.4s;
}

.sk-cube-grid .sk-cube4 {
    animation-delay: 0.1s;
}

.sk-cube-grid .sk-cube5 {
    animation-delay: 0.2s;
}

.sk-cube-grid .sk-cube6 {
    animation-delay: 0.3s;
}

.sk-cube-grid .sk-cube7 {
    animation-delay: 0s;
}

.sk-cube-grid .sk-cube8 {
    animation-delay: 0.1s;
}

.sk-cube-grid .sk-cube9 {
    animation-delay: 0.2s;
}

@keyframes sk-cubeGridScaleDelay {
    0%, 70%, 100% {
        transform: scale3D(1, 1, 1);
    }
    35% {
        transform: scale3D(0, 0, 1);
    }
}

/* cube move spinner */
.cube-move {
    width: 56px;
    height: 56px;
}

.cube1, .cube2 {
    background-color: var(--color01);
    width: 15px;
    height: 15px;
    top: 0;
    left: 0;
    /*do this when animations are set off!*/
    transform: translate3d(20px, 0px, 0) rotate3d(0, 0, 1, 50deg);
    animation: sk-cubemove 0.6s infinite ease-out;
}

.cube2 {
    background-color: var(--color02);
}

.cube2 {
    animation-delay: -0.3s;
}

@keyframes sk-cubemove {
    0% {
        transform: rotate3d(0, 0, 1, 0deg);
    }
    25% {
        transform: translate3d(42px, 0, 0);
    }
    50% {
        transform: translate3d(42px, 42px, 0);
    }
    75% {
        transform: translate3d(0, 42px, 0);
    }
    100% {
        transform: rotate3d(0, 0, 1, 0deg);
    }
}

/* follow balls spinner */
.follow-balls {
    width: 77px;
    text-align: center;
}

.follow-balls > div {
    display: inline-block;
    width: 18px;
    height: 18px;
    margin-right: 5px;
    background-color: var(--color01);
    /*border-radius: 100%;*/
    animation: sk-bouncedelay 1.4s infinite ease-in-out both;
}

.follow-balls .bounce1 {
    animation-delay: -0.32s;
}

.follow-balls .bounce2 {
    background-color: var(--color02);
    animation-delay: -0.16s;
}

@keyframes sk-bouncedelay {
    0%, 80%, 100% {
        transform: scale(0);
    }
    40% {
        transform: scale(1);
    }
}

/*-- Components - Popup overlay and window --*/
.modalOverlay, .modalOverlayPopup {
    background-color: var(--color04-alpha-60);
    z-index: 1000;
}

#waitSpinnerModalOverlay.modalOverlay {
    background-color: var(--color04-alpha-30);
}

.modalOverlayUndarken {
    background-color: transparent;
}

.popupWindow {
    display: flex;
    flex-direction: column;
    background-color: var(--color04);
    border: 1px solid var(--color09);
    box-shadow: 2px 2px 8px var(--color04-alpha-80);
    word-wrap: break-word;
    animation: fadeIn 0.35s ease-in;
}

#popupWindowContent {
    display: flex;
    flex-direction: column;
    background: var(--color05) linear-gradient(180deg, var(--color03-alpha-15) 0%, var(--color07-alpha-0) 100%);
}

#popupWindowContent>main {
    overflow: visible;
}

/*PopupAmountEntry*/
#flexArticlePopupAmountEntry {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    overflow: hidden;
}

/*Popup Selection*/
#popupWindowSelection #flexMainPopup {
}

#flexArticlePopupSelection, #popupSelectionItemContainer {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    overflow: hidden;
}

#popupSelectionItemContainer {
    justify-content: center;
}

#popupSelectionItemContainer .button[data-current-item=true] {
    transform: translateX(5px) scaleY(1.4) scaleX(1.1);
}

#popupSelectionItemContainer .button[data-current-item=false] {
    opacity: 0.2;
}

/*Popup Help*/
#flexArticlePopupHelp {
    display: flex;
    flex-direction: column;
}

#popupWindowHelp #flexMainPopup {
    flex-direction: column;
}

#popupWindowHelp #helpContent {
    overflow: hidden;
}

/* pleasewait.component Popup*/
#pleaseWaitPopup #flexArticlePopup {
    flex-direction: column;
    justify-content: flex-start;
}

#pleaseWaitPopup #flexArticlePopup>var {
    align-self: center;
}

/* pop up hints */
.popupHint, .popupHint[data-content-style$="InfoBox"] {
    display: inline-block;
    background: var(--color05) linear-gradient(180deg, var(--color03-alpha-15) 0%, var(--color07-alpha-0) 100%);
    color: var(--color03);
    border: 1px solid var(--color01);
    box-shadow: 5px 5px 8px var(--color04-alpha-80);
    text-align: center;
    word-wrap: break-word;
    z-index: 1002;
    transform: translatez(0);
}

.popupHint[data-content-style$="WarningBox"] {
    border: 1px solid var(--color10);
}

.popupHint[data-content-style$="ErrorBox"] {
    border: 1px solid var(--color07);
}

.popupHint::before, .popupHint[data-content-style$="InfoBox"]::before {
    color: var(--color01);
    content: "\25c4";
}

.popupHint[data-content-style$="WarningBox"]::before {
    color: var(--color10);
}

.popupHint[data-content-style$="ErrorBox"]::before {
    color: var(--color07);
}

/*-- List rows and shadows top/bottom --*/
.listRow:nth-of-type(odd) {
    background: var(--color09-alpha-10);
}

.listRow:nth-of-type(even) {
    background: var(--color09-alpha-20);
}

/* top shadow */
.listRow[data-list-up-active]:first-child:nth-of-type(odd) {
    background: linear-gradient(180deg, var(--color04-alpha-30) 0%, var(--color09-alpha-10) 15%, var(--color09-alpha-10) 100%);
}

/* bottom shadow - depending on even or odd row */
.listRow[data-list-down-active]:last-child:nth-of-type(odd) {
    background: linear-gradient(180deg, var(--color09-alpha-10) 0%, var(--color09-alpha-10) 85%, var(--color04-alpha-30) 100%);
}

.listRow[data-list-down-active]:last-child:nth-of-type(even) {
    background: linear-gradient(180deg, var(--color09-alpha-20) 0%, var(--color09-alpha-20) 85%, var(--color04-alpha-30) 100%);
}

/*-- General message / escalation in  message and question view --*/
.flexMessageContainer {
    display: flex;
    flex-direction: column;
    order: 2;
    z-index: 5;
    flex-grow: 1;
}

#flexMessageContainerHeader {
    justify-content: flex-end;
    overflow: visible;
    /* position=absolute:
    this will exclude the flexMessageContainerHeader from the surrounding flexbox handling.
    Moving it around (with margin etc.) will then not move the other elements 'flexHeaderTop' and 'flexHeaderBottom' */
    position:absolute;
}

div[data-popup-active="true"] #flexMessageContainerHeader {
    opacity: 0;
}

.messageArea {
    display: flex;
    align-items: flex-start;
    word-break: keep-all; /*do not use break-all, since this would break words at the end of the container and left words be broken*/
    word-wrap: normal;
    overflow: hidden;
}

#flexMessageContainerHeader .messageArea {
    animation: escalationMoveIn 0.8s ease-in;
}

#flexMessageContainerHeader .disappear {
    animation: escalationMoveOut 0.5s ease-out;
}

#flexMessageContainerArticle {
    animation: fadeIn 0.25s ease-in; /*zoom/scale effects may disturb UIMovements for content scrolling purpose*/
}

#flexMessageContainerArticle .messageArea {
    align-items: inherit; /*to let word-break take effect*/
}

.messageArea, .messageArea[data-content-style$="InfoBox"] {
    box-shadow: 2px 2px 8px var(--color04-alpha-80);
    background: var(--color05) linear-gradient(180deg, var(--color03-alpha-15) 0%, var(--color07-alpha-0) 100%);
    border: 1px solid var(--color09);
}

.messageArea[data-content-style$="WarningBox"] {
    background: var(--color05) linear-gradient(180deg, var(--color02-alpha-15) 0%, var(--color07-alpha-0) 100%);
    border: 1px solid var(--color10);
}

.messageArea[data-content-style$="ErrorBox"] {
    background: var(--color05) linear-gradient(180deg, var(--color07-alpha-15) 0%, var(--color07-alpha-0) 100%);
    border: 1px solid var(--color07);
}

.messageIcon {
    display: inline-flex;
}

/*-- Virtual Keyboard --*/
#vkModalOverlay.modalOverlay {
    background-color: var(--color04-alpha-60);
}

#virtualKeyboardContainer {
    background-color: var(--color05);
    z-index: 1001;
}

#virtualKeyboardArea, #popupKeysArea {
    display: flex;
    justify-content: center;
    background-color: var(--color05);
}

#virtualKeyboardArea #keyArea, #keyAreaNumPad {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

.keyboardButton {
    flex-direction: row;
    flex-wrap: wrap;
}

.keyboardButton>var {
    text-transform: none;
    justify-content: center;
}

.keyboardButton>.secondKeyCode {
    justify-content: flex-end;
}

.keyboardButton:active, #shiftKey.pressed {
    background-color: var(--color01);
}

#shiftKey.pressed {
    transform: perspective(600px) rotate3d(1, 0, 0, 24deg);
}

#popupKeysArea .keyboardButton.highlighted {
    background-color: var(--color01);
}

#popupKeysArea .keyboardButton {
    flex-grow: 1;
    flex-wrap: nowrap;
}

.popupHint[data-virtualkeyboard-hint="true"]::before {
    content: '';
}

#placedummy00, #placedummy01, #placedummy02, #placedummy03 {
    visibility: hidden;
}

#generalVKInput {
    text-align: left;
}

#generalVKInputLabel {
    text-shadow: none;
}

/* special styling for the input field of the Virtual keyboard */
/* validation state: empty: no value or disabled */
input[data-validation-state="empty"][id="generalVKInput"] {
    border: 2px solid var(--color09);
}

/* validation state: valid */
input[data-validation-state="valid"][id="generalVKInput"] {
    border: 2px solid var(--color06);
}

/* validation state: wrong */
input[data-validation-state="invalid"][id="generalVKInput"] {
    border: 2px solid var(--color07);
}

/*-- Timeout progress bar --*/
.timeoutProgressBar {
    display: none;
    overflow: hidden;
    background-color: var(--color09);
}

/*
 * View specific
 */

/*-- Views: idlepresentation and cardanimations --*/
.contactlessReaderBack {
    background: linear-gradient(180deg, var(--color09-alpha-30) 0%, var(--color09-alpha-20) 100%);
    border: 1px solid var(--color01);
    border-radius: 10px;
    z-index: 1;
}

#cardInsertContactless, #cardInsertContactlessNotOp {
    z-index: 100;
}

#contactlessReader>.deviceOutOfService {
    z-index: 300;
}

.nfcIconDisabled {
    opacity: 0.3;
}

/*-- View: pinentry --*/
#pinDigitsArea {
    display: flex;
    transform-style: preserve-3d;
    animation: fadeIn 0.15s;
}

.pinDigit {
    text-align: center;
    transform-style: preserve-3d;
}

.pinDigit.flipped {
    transform: rotateY(180deg);
    animation: flip-Y-180 0.6s ease-out;
}

.pinDigit>div {
    backface-visibility: hidden;
}

div.front {
    background-color: var(--color09-alpha-30);
}

div.frontCurrent {
    background-color: var(--color09-alpha-30);
    border: 1px solid var(--color01);
}

div.frontCurrent>var {
    animation: blink 1s ease-out infinite;
}

div.back {
    background-color: var(--color01-alpha-70);
    border: none;
    transform: rotateY(180deg);
}

/*-- Views: message, question, adainformation --*/
div[data-view-id="message"] #flexMessageContainerHeader,
div[data-view-id="question"] #flexMessageContainerHeader,
div[data-view-id="questionDCC"] #flexMessageContainerHeader,
div[data-view-id="ASAIquestionBack"] #flexMessageContainerHeader,
div[data-view-id="adainformation"] #flexMessageContainerHeader,
div[data-view-id="receipt"] #flexMessageContainerHeader {
    /*suppress message via header*/
    display: none;
}

div[data-view-id="message"] #flexTime,
div[data-view-id="question"] #flexTime,
div[data-view-id="questionDCC"] #flexTime,
div[data-view-id="ASAIquestionBack"] #flexTime,
div[data-view-id="adainformation"] #flexTime,
div[data-view-id="receipt"] #flexTime {
    -webkit-filter: none;
    filter: none;
}

/*-- View: adaadjustment --*/
div[data-view-id="adaadjustment"] #flexNavSK00::before,
div[data-view-id="adaadjustment"] #flexNavSK02:before {
    content: '';
    z-index: -1;
    background: var(--color09-alpha-20);
    box-shadow: 2px 2px 2px var(--color04);
}

/* Text */
div[data-view-id="adaadjustment"] #flexNavSK00::after,
div[data-view-id="adaadjustment"] #flexNavSK02::after {
    color: var(--color09);
    text-shadow: 1px 1px 3px var(--color04);
}

div[data-view-id="adaadjustment"] #flexNavSK00::after {
    content: attr(vol);
}

div[data-view-id="adaadjustment"] #flexNavSK02::after {
    content: attr(rate);
}

div[data-view-id="adaadjustment"] #flexNavSK01::before,
div[data-view-id="adaadjustment"] #flexNavSK03::before {
    content: '';
    z-index: -1002;
    background: var(--color09-alpha-15);
}

/*-- View: amountselection --*/
div[data-view-id="amountselection"] .button.skLeft.iconButton {
    justify-content: flex-end;
}

/*-- View: accountselection / billpaymentselection --*/
div[data-view-id="accountselection"] #flexNav,
div[data-view-id="billpaymentselection"] #flexNav {
    overflow: visible;
    z-index: 1;
}

div[data-view-id="accountselection"] #flexNav>:nth-child(1n),
div[data-view-id="billpaymentselection"] #flexNav>:nth-child(1n){
    display: flex;
}

div[data-view-id="accountselection"] #flexNav #additional,
div[data-view-id="billpaymentselection"] #flexNav #additional {
    display: flex;
    flex-direction: row;
    align-items: center;
    background: var(--color09-alpha-20);
    z-index: -1;
    animation: accountSelectionDetails 0.6s ease-in;
}

div[data-view-id="accountselection"] #flexNav>div #additional>div,
div[data-view-id="billpaymentselection"] #flexNav>div #additional>div {
    background-color: var(--color04);
}

/*-- View: outofservice / offlinespa --*/
div[data-view-id="outofservice"] #flexArticle,
div[data-view-id="offlinespa"] #flexArticle {
    justify-content: flex-start;
    flex-direction: column;
    align-items: center;
}

.outOfServicePattern {
    background: url('../../../default/images/pattern.svg') repeat;
}

#outOfServiceMessage {
    text-align: center;
    white-space: nowrap;
}

/*-- View: welcome --*/
div[data-view-id="welcome-view"] #flexMain,
div[data-view-id="welcome"] #flexMain {
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
}

/*-- View: pleasewait --*/
div[data-view-id="pleasewait"] #flexArticle {
    align-items: center;
}

/* Points loader */
#waitLine>div {
    background-color: var(--color01-alpha-60);
    border: 1px solid var(--color01);
}

/* Wave spinner */
#spinnerWave>div {
    display: inline-block;
    background-color: var(--color01-alpha-60);
    border: 1px solid var(--color01);
    color: var(--color01-alpha-80);
}

/*-- View: billsplitting --*/
div[data-view-id="billsplitting"] #flexArticle, div[data-view-id="billselection"] #flexArticle {
    flex-direction: column;
    justify-content: flex-start;
}

#amountHead {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    align-items: center;
    flex-grow: 0;
    flex-shrink: 0;
    background: linear-gradient(180deg, var(--color09-alpha-50) 0%, var(--color09-alpha-50) 94%, var(--color09-alpha-0) 95%, var(--color09-alpha-1) 100%);
    box-shadow: 0 10px 16px 0 var(--color04-alpha-60);
    z-index: 1;
}

.flexDistributionRow {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    align-items: center;
    align-content: center;
    align-self: center;
}

.flexDistributionRow .itemStack {
    display: flex;
    justify-content: space-around;
}

/*-- View: billselection --*/
div[data-view-id="billselection"] .flexDistributionRow[data-current-denomination="true"] {
    /*outline: 1px solid red;*/
    background: var(--color09-alpha-20);
}

/*-- View: amountentry, numericentry, formentry --*/
div[data-view-id="amountentry"] #flexArticle,
div[data-view-id="numericentry"] #flexArticle {
    justify-content: flex-start;
}

div[data-view-id="formentry"] .generalInput {
    text-align: left;
}

div[data-view-id="formentry"] .generalInputFieldAreaZone {
    display: flex;
    flex-direction: column;
}

.generalInputFieldAreaZone object {
    position: fixed;
    z-index: 1;
    align-self: flex-end;
}

.generalInputFieldAreaZone[data-view-state="2"] object {
    opacity: 0.2;
}

/*-- View: depositresult --*/
div[data-view-id="depositresult"] #flexHeader .messageArea>var { /*contains an icon*/
    display: inherit;
}

div[data-view-id="depositresult"] #flexArticle {
    flex-direction: column;
    justify-content: flex-start;
    flex-grow: 0;
}

div[data-view-id="depositresult"] #flexNav {
    overflow: visible;
}

.l2Sign>object {
    display: inline-flex;
    background-image: url('../../../default/images/l2_notes.svg');
}

#flexDepositResultTotalAmount {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    background: linear-gradient(180deg, var(--color09-alpha-50) 0%, var(--color09-alpha-50) 94%, var(--color09-alpha-0) 95%, var(--color09-alpha-1) 100%);
    z-index: 2;
}

#flexDepositResultTotalAmountRow1, #flexDepositResultTotalAmountRow2 {
    display: flex;
    flex-direction: row;
}

#firstRowAmountCaptionArea, #secondRowAmountCaptionArea  {
    text-align: right;
}

#firstRowAmountCurrencyArea, #secondRowAmountCurrencyArea {
    text-align: left;
}

#firstRowAmountSumCaptionArea, #secondRowAmountSumCaptionArea {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
}

#flexDepositResultDetails {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.flexDepositResultDetailsRow {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    animation-name: moveInLeft;
    animation-duration: 0.3s;
}

.flexDepositResultDetailsRow[data-row-l2="true"] {
    background: var(--color07-alpha-30);
}

.flexDepositResultDetailsRow[data-row-l2="true"] .note {
    border: 1px solid var(--color07);
    background: var(--color07-alpha-80);
}

.flexDepositResultDetailsRow[data-row-l2="true"] .note>object {
    opacity: 0.7;
}

.flexDepositResultDetailsRow .crossX,
.flexDepositResultDetailsRow .equals {
    text-align: center;
}

.flexDepositResultDetailsRow .count,
.flexDepositResultDetailsRow .result {
    text-align: right;
}

/*== View: common item animations views ==*/
/*-- Items slots --*/
.flexItemsSlot, .flexItemsSlotIn, .flexMetalSlotIn, .itemLane, .itemLaneMetal, .flexMetalWarningArea, .flexItemsSlotLSF {
    display: flex;
    flex-direction: column;
    align-items: center;
    overflow: visible;
    justify-content: flex-start;
}

#flexAnimations {
    display: flex;
    order: 2;
    flex-grow: 1;
}

#takeMetalItems {
    display: flex;
    flex-direction: row;
    align-items: center;
}

#takeMetalAnimationArea, #takeCoinAnimationArea {
    display: flex;
    flex-direction: column;
    align-items: center;
}

#takeCoinAnimationArea {
    display: flex;
    order: 2;
    flex-direction: column;
    align-items: center;
}

/*-- View: depositanimations (CIN/COUT), depositchequesanimations --*/
div[data-view-id="depositanimations"] #flexArticle,
div[data-view-id="depositchequesanimations"] #flexArticle {
    flex-direction: column;
    justify-content: space-between;
    overflow: visible;
}

div[data-view-id="depositanimations"] #flexNav, div[data-view-id="depositanimations"] #flexAside,
div[data-view-id="depositchequesanimations"] #flexNav, div[data-view-id="depositchequesanimations"] #flexAside {
    flex-grow: 0;
    overflow: visible;
}

#flexAdditionalHints, #flexAdditionalTexts, #flexAdditionalIcons {
    display: flex;
    order: 1;
    flex-direction: row;
    justify-content: flex-start;
    align-self: flex-start;
    flex-grow: 1;
}

#flexAdditionalHints {
    flex-shrink: 0;
}

#flexAdditionalTexts {
    flex-direction: column;
    flex-shrink: 0;
}

#flexAdditionalIcons {
    order: 2;
    justify-content: flex-start;
    align-items: flex-start;
}

#flexAnimationHead {
    order: 1;
    align-self: flex-start;
}

.warningIcon:before {
    content: "";
    background: url('../../../default/images/deposit_warning_red_circle.svg') no-repeat;
}

/* cheque scanning animation */
#chequesScanningTexts {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
}

#chequeBack {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

#chequeScanRedLight {
    z-index: 1;
}

/*-- View: Accountinformation --*/
div[data-view-id="accountinformation"] #flexArticle {
    flex-wrap: wrap;
    align-items: flex-start;
    justify-content: flex-start;
    align-content: flex-start;
    z-index: -1;
}

div[data-view-id="accountinformation"] #flexNav {
    align-items: flex-start;
    flex-grow: 0;
    flex-shrink: 0;
    overflow: visible;
    z-index: 1;
}

div[data-view-id="accountinformation"] #flexAside {
    align-items: flex-end;
    flex-grow: 0;
    flex-shrink: 0;
    overflow: visible;
    z-index: 1;
}

#AINPcebal, #AINPcemov, #AINIfx, #AINPcebalTable {
    display: flex;
    flex-direction: column;
}

#flexAccountDetailsArea {
    display: flex;
    flex-direction: row;
    overflow: visible;
    z-index: 1;
}

/*- AINStd, AINIfx, AINPcemov -*/
#flexAccountAINStdAINIfxAINPcemov {
    display: flex;
    flex-direction: row;
    flex-grow: 1;
    overflow: visible;
    z-index: 1;
    background: var(--color09-alpha-10);
}

#flexAccountDetailsColumn1, #flexAccountDetailsColumn2 {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    flex-shrink: 0;
    overflow: visible;
    z-index: 1;
}

#flexAccountDetailsColumn2 {
    flex-direction: row;
}

#accountNumberArea, #accountHolderArea, #balanceArea, #accountTypeArea {
    display: flex;
    flex-grow: 1;
    flex-shrink: 0;
}

#balanceArea {
    flex-direction: column;
    border-left: 1px solid var(--color04);
}

#accountNumberLabel, #accountNumberValue, #accountHolderLabel, #accountHolderValue,
#balanceLabel, #balanceValue, #accountTypeLabel, #accountTypeValue {
    display: flex;
    align-items: center;
}

/* Transaction area */
#flexTransactionsArea {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
}

#flexTransactionsHeader {
    display: flex;
    flex-direction: column;
    flex-grow: 0;
    flex-shrink: 0;
    background: var(--color09-alpha-50);
}

#flexTransactionsHeaderAINStdAINIfxAINPcemov {
    display: flex;
    flex-direction: column;
}

#row1TransactionsHeader, #row2TransactionsHeader {
    display: flex;
    flex-direction: row;
    align-items: center;
}

#transHeadExpirationDateLabel, #transHeadEffectiveDateLabel {
    flex-grow: 1;
    flex-shrink: 0;
}

#transHeadAmountLabel {
    display: flex;
    justify-content: flex-end;
    flex-grow: 0;
    flex-shrink: 0;
}

/* Transaction */
#flexTransactionsDataArea {
    display: flex;
    flex-direction: column;
}

.row1TransData, .row2TransData  {
    display: flex;
    flex-grow: 1;
    flex-shrink: 1;
}

.row1TransData {
    flex-direction: row;
    align-items: flex-end;
}

.row2TransData {
    flex-direction: row;
}

.expirationDateValue, .effectiveDateValue  {
    flex-grow: 1;
    flex-shrink: 0;
}

.amountValue, .currencyValue {
    display: flex;
    justify-content: flex-end;
    flex-grow: 0;
    flex-shrink: 0;
}

.column1purposeValue, .column2purposeValue {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    align-items: stretch;
}

.purposeValue {
    display: flex;
}

/*-- AINPcebal --*/
#flexAccountDetailsAINPcebal {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    flex-grow: 1;
    overflow: visible;
    z-index: 1;
    background: var(--color09-alpha-10);
}

#flexTransactionsHeaderAINPcebal, #flexTransactionsDataAINPcebal .transaction {
    display: flex;
    flex-direction: row;
    align-items: center;
    animation-name: moveInLeft;
    animation-duration: 0.3s;
}

#transHeadAccountTypeLabel, #transHeadAccountNumberLabel, #transHeadAccountBalanceLabel, #transHeadAvailableAmountLabel {
    display: flex;
    flex-grow: 1;
    flex-shrink: 0;
}

.row1TransData, .row2TransData, .transaction {
    animation-name: moveInLeft;
    animation-duration: 0.3s;
}

.accountTypeValue, .accountNumberValue, .accountBalanceValue, .availableAmountValue {
    flex-grow: 1;
    flex-shrink: 0;
}

/*- Visibility: AINStd, AINIfx, AINPcemov, AINPcebal -*/
/* AINStdTable */
#AINStdTable #flexAccountDetailsAINPcebal, #AINStdTable #flexTransactionsHeaderAINPcebal,
#AINStdTable #flexTransactionsDataAINPcebal, #AINStdTable #accountTypeArea {
    display: none;
}

/* AINIfxTable */
#AINIfxTable #flexAccountDetailsAINPcebal, #AINIfxTable #flexTransactionsHeaderAINPcebal,
#AINIfxTable #flexTransactionsDataAINPcebal, #AINIfxTable #accountHolderArea {
    display: none;
}

#AINIfxTable #balanceArea, #AINPcebalTable #balanceArea {
    visibility: hidden;
}

/* AINPcebalTable */
#AINPcebalTable #flexAccountAINStdAINIfxAINPcemov, #AINPcebalTable #flexTransactionsHeaderAINStdAINIfxAINPcemov,
#AINPcebalTable #flexTransactionsDataAINStdAINIfxAINPcemov {
    display: none;
}

/* AINPcemovTable */
#AINPcemovTable #flexAccountDetailsAINPcebal, #AINPcemovTable #flexTransactionsHeaderAINPcebal,
#AINPcemovTable #flexTransactionsDataAINPcebal, #AINPcemovTable #accountNumberArea, #AINPcemovTable #accountTypeArea {
    display: none;
}

#AINPcemovTable #flexAccountDetailsRow2 {
    order: 1;
}

#AINPcemovTable #flexAccountDetailsRow1 {
    order: 2;
}

#AINPcemovTable #balanceArea {
    flex-direction: row;
    border-left: none;
}

/*-- View: depositchequesresult --*/
div[data-view-id="depositchequesresult"] #flexArticle {
    flex-direction: column;
    align-items: center;
    align-self: flex-start;
}

#chqInfoArea {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    flex-wrap: wrap;
    background: var(--color09-alpha-20);
    border: 1px solid var(--color04);
}

#chqInfoArea.accepted {
    border: 1px solid var(--color06);
}

#chqInfoArea.declined {
    border: 1px solid var(--color07);
}

/* #chqInfoDetails, #chqErrorInfoArea */
#chqInfoArea>div {
    display: flex;
}

#chqInfoDetails {
    flex-direction: row;
}

#chqInfoDetailsColumn1, #chqInfoDetailsColumn2 {
    display: flex;
    flex-direction: column;
}

#chqInfoDetailsColumn1 {
    align-items: flex-start;
}

#chqInfoDetailsColumn2 {
    align-items: flex-end;
}

#chqArea {
    overflow: hidden;
    flex-direction: column;
    justify-content: center;
}

#chqArea #declinedMessage {
    background: var(--color07-alpha-50);
}

#chqNoFromTo {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    text-transform: uppercase;
}

#chqArea .chequeImageContainer {
    transform-style: preserve-3d;
    transition: all 0.5s linear;
}

#chqArea .frontImage {
    position: absolute;
    backface-visibility: hidden;
}

#chqArea .backImage {
    transform: rotate3d(1, 0, 0, 180deg);
}

div[data-view-id="depositchequesresult"] #chqInfoArea[data-document-zoom="in"] #chqNoFromTo,
div[data-view-id="depositchequesresult"] #chqInfoArea[data-document-zoom="in"] #declinedMessage {
    opacity: 0;
}

div[data-view-id="depositchequesresult"] #chqInfoArea[data-document-zoom="out"] {
    transition: all 0.25s ease-out;
}

/*-- View: scannedimageviewer --*/
div[data-view-id="scannedimageviewer"] #imgViewer {
    display: flex;
    justify-content: center;
}

div[data-view-id="scannedimageviewer"] #chqInfoArea[data-document-zoom="in"] #imgViewer {
    background: var(--color04-alpha-80);
    z-index: 1;
}

/*-- View: envelopeanimations.html --*/
#envelopeEject3D, #envelopeInsert3D {
    display: flex;
    align-items: center;
    flex-direction: column;
}

/* -- View: scancodeanimations.html --*/
.scanBackground {
    background-color: var(--color09-alpha-20);
}

#barcodeSlot, #qrcodeSlot {
    background-color: var(--color09-alpha-30);
    border: solid 1px var(--color09-alpha-60);
}

#barcodeScanArea, #qrcodeScanArea, #barcodeBack, #qrcodeBack {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    z-index: -1;
}

#barcodeRedLight, #qrcodeRedLight  {
    z-index: 100;
}

.barcode, .qrcode  {
    z-index: -1;
}

/* -- View: checkboxes.html --*/
.checkBoxItem {
    text-transform: uppercase;
    align-self: center;
}

.checkBoxItemLeft {
    justify-content: flex-start;
    border: 1px solid var(--color01);
    border-left: none;
}

.checkBoxItemRight {
    justify-content: flex-end;
    border: 1px solid var(--color01);
    border-right: none;
}

.checkBoxItemRight>var {
    text-align: end;
}


/*-- View: Chiptransactions --*/
div[data-view-id="chiptransactions"] #flexArticle {
    flex-wrap: wrap;
    align-items: flex-start;
    justify-content: flex-start;
    align-content: flex-start;
    z-index: -1;
    flex-grow: 1;
    flex-shrink: 0;
}

div[data-view-id="chiptransactions"] #flexNav {
    align-items: flex-start;
    overflow: visible;
    z-index: 1;
    flex-grow: 1;
    flex-shrink: 0;
}

div[data-view-id="chiptransactions"] #flexAside {
    align-items: flex-end;
    overflow: visible;
    z-index: 1;
    flex-grow: 0;
    flex-shrink: 0;
}

/* Transaction area */
#flexChipTransactionsArea {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
}

#flexChipTransactionsHeader {
    display: flex;
    flex-direction: column;
    flex-grow: 0;
    flex-shrink: 0;
    background: var(--color09-alpha-50);
}

#rowChipTransactionsHeader {
    display: flex;
    flex-direction: row;
    align-items: center;
}

#transHeadChipDateLabel, #transHeadChipTimeLabel {
    flex-grow: 0;
    flex-shrink: 0;
    justify-content: flex-start;
}

#transHeadChipAmountLabel, #transHeadChipBalanceLabel, #transHeadChipStateLabel {
    display: flex;
    justify-content: flex-end;
    flex-grow: 0;
    flex-shrink: 0;
}

/* Transaction */
.chipTransaction {
    animation-name: moveInLeft;
    animation-duration: 0.3s;
}

#flexChipTransactionsDataArea {
    display: flex;
    flex-direction: column;
}

.rowChipTransData  {
    display: flex;
    flex-grow: 0;
    flex-shrink: 1;
    flex-direction: row;
    align-items: center;
}

.chipDateValue, .chipTimeValue  {
    display: flex;
    justify-content: flex-start;
    flex-grow: 0;
    flex-shrink: 0;
}

.chipAmountValue, .chipBalanceValue, .chipStateValue {
    display: flex;
    justify-content: flex-end;
    flex-grow: 0;
    flex-shrink: 0;
}

/*-- View: receipt.html --*/
div[data-view-id="receipt"] .messageArea {
    position: relative; /*because of pseudo elements before/after to keep responsivity*/
    justify-content: center;
    border: none;
    box-shadow: none;
    background: transparent;
    background: linear-gradient(-135deg, var(--color09) 8px, transparent 0) 0 8px, linear-gradient(135deg, var(--color09) 8px, var(--color05) 0) 0 8px;
    background-color: var(--color09);
    background-position: left bottom;
    background-repeat: repeat-x;
}

div[data-view-id="receipt"] .messageArea::before,
div[data-view-id="receipt"] .messageArea::after {
    position: absolute;
    content: '\25D7';
    color: var(--color05);
}

div[data-view-id="receipt"] .messageArea::after {
    content: '\25D6';
}

div[data-view-id="receipt"] .messageArea>var {
    font-family: Courier, sans-serif;
    text-shadow: none;
    word-break: break-all;
}

/*-- View: mobiletransaction.html --*/
.mobilePhoneBack {
    background: rgba(255, 255, 255, 0.6);
    /*background: var(--color03-alpha-60);*/
    border: 1px solid var(--color01);
    border-radius: 10px;
    z-index: 1;
}

.mobilePhoneDisplayBack {
    background: rgba(0, 0, 0, 0.4);
    /*background: var(--color04-alpha-40);*/
    z-index: 1;
}

#mobilePhone {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
}

#mobilePhoneDisplay {
    display: flex;
    flex-direction: column;
    align-items: center;
}

/*-- View: signaturepad.html --*/
div[data-view-id="signaturepad"] #flexArticle {
    flex-direction: column;
    justify-content: flex-start;
    z-index: 2;
}

#signatureArea {
    background: var(--color09-alpha-20);
    color: var(--color03);
    border: 1px solid var(--color09-alpha-60);
    z-index: 1;
}

/*-- View: videoassistance.html --*/
#videoImageArea {
    display: flex;
    justify-content: center;
    align-items: flex-start;
}

div[data-view-id="videoassistance"] .checkBoxItemRight {
    border: none;
}

div[data-view-id="videoassistance"] #flexArticle {
    justify-content: flex-start;
}

/*-- View: outofserviceadditionalinfos.html --*/
div[data-view-id="outofserviceadditionalinfos"] #flexArticle {
    display: grid;
}

#atmInfosHeadline, .flexAtmInfosDetailsRow {
    display: grid;
    z-index: 2;
}

#atmInfosHeadline {
    background: linear-gradient(180deg, var(--color09-alpha-50) 0%, var(--color09-alpha-50) 94%, var(--color09-alpha-0) 95%, var(--color09-alpha-1) 100%);
    align-items: flex-start;
}

#atmInfosHeadlineDistance {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
}

#atmInfosHeadline>var:nth-child(3) {
    text-align: center;
}

.atmDistance {
    align-self: center;
    text-align: right;
}

.atmMapLocation {
    justify-self: center;
    align-self: center;
    text-align: center;
}

.atmState {
    text-align: center;
    align-self: center;
}

.flexAtmInfosDetailsRow .atmAddress {
    display: grid;
}

div[data-view-id="outofserviceadditionalinfos"] .qrcode {
    transform: none;
}

#atmQRCodes {
    display: flex;
    flex-direction: column;
    align-content: center;
    align-items: center;
}

#mapLocationContainer {
    display: flex;
    flex-direction: column;
    position: absolute;
    background: var(--color05);
}

#mapLocationContainer #mapLocationContainerClose {
    position: absolute;
    align-self: flex-end;
    border: none;
    font-weight: bold;
    z-index: 1; /*cause of a high value of the map itself*/
    background-color: rgba(0, 60, 136, .5);
    color: var(--color09);
}

#mapLocationContainer #mapLocationContainerClose:focus,
#mapLocationContainer #mapLocationContainerClose:hover {
    text-decoration: none;
    background-color: rgba(0, 60, 136, .7)
}

#mapLocationContainer #popup-content {
    word-break: keep-all;
}

/* -- View: dualchoiceselection.html --*/
div[data-view-id="dualchoiceselection"] #flexArticle {
    justify-content: space-between;
}

div[data-view-id="dualchoiceselection"] #leftColumnText {
    position: absolute;
    animation: fadeInRight 0.75s ease-in;
}

div[data-view-id="dualchoiceselection"] #rightColumnText {
    position: absolute;
    animation: fadeInLeft 0.75s ease-in;
}

div[data-view-id="dualchoiceselection"] #leftColumnText[data-validation-state=true],
div[data-view-id="dualchoiceselection"] #rightColumnText[data-validation-state=true] {
    color: var(--color06);
    transition: color 0.6s ease-in;
}

div[data-view-id="dualchoiceselection"] #flexArticle #separatorHorizontalLeft,
div[data-view-id="dualchoiceselection"] #flexArticle #separatorHorizontalRight,
div[data-view-id="dualchoiceselection"] #flexArticle #separatorVertical {
    position: absolute;
}

div[data-view-id="dualchoiceselection"] #flexArticle #separatorHorizontalLeft,
div[data-view-id="dualchoiceselection"] #flexArticle #separatorHorizontalRight {
    border-top: 1px dashed var(--color09);
    animation: zoomIn 0.6s ease-in;
}

div[data-view-id="dualchoiceselection"] #flexArticle #separatorVertical {
    /*align-self: center;*/
    border-left: 1px dashed var(--color09);
    animation: zoomIn 0.6s ease-in;
}

div[data-view-id="dualchoiceselection"] #flexArticle #separatorVertical[data-validation-state=true] {
    border-left: 1px solid var(--color06);
    transition: border-left 0.6s ease-in;
}

div[data-view-id="dualchoiceselection"] #flexArticle #separatorHorizontalLeft[data-validation-state=true],
div[data-view-id="dualchoiceselection"] #flexArticle #separatorHorizontalRight[data-validation-state=true] {
    border-top: 1px solid var(--color06);
    transition: border-top 0.6s ease-in;
}


/*new code from cards*/

.container{
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: row;
    font-family: 'Rubik', sans-serif;
}

.container .card{
    background-color: var(--color14);
    margin:3%;
    width: 200px;
    height: 250px;
    box-shadow: 0 15px 25px rgba(0, 0, 0, 0.2);
    border-radius: 10px;
    font-family: 'Rubik', sans-serif;
}

h1.aa{
    display: flex;
    justify-content: center;
    background-color: var(--color04);
    color: var(--color03);
    margin: 0;
    padding: 5%;
    font-size: 2em;
    border-top-left-radius: 10px ;
    border-top-right-radius: 10px;
    font-family: 'Rubik', sans-serif;
}

.card .card-content{
    padding-left: 10%;
    font-family: 'Rubik', sans-serif;
}

hr{
    background-color: var(--color04);
    border: none;
    height: 3px;
    font-family: 'Rubik', sans-serif;
}

.card-footer{
    display: flex;
    padding-right: 5%;
    justify-content: flex-end;
    font-size: 1.5em;
    font-family: 'Rubik', sans-serif;
}




